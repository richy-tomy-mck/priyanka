input CreatePriyankaDevOrdersInput {
	orderId: String!
	createdTime: String!
	description: String!
	weight: String
}

input DeletePriyankaDevOrdersInput {
	orderId: String!
}

type Mutation {
	createPriyankaDevOrders(input: CreatePriyankaDevOrdersInput!): PriyankaDevOrders
	updatePriyankaDevOrders(input: UpdatePriyankaDevOrdersInput!): PriyankaDevOrders
	deletePriyankaDevOrders(input: DeletePriyankaDevOrdersInput!): PriyankaDevOrders
}

type PriyankaDevOrders {
	orderId: String!
	createdTime: String!
	description: String!
	weight: String
	orderStatus: String
}

type PriyankaDevOrdersConnection {
	items: [PriyankaDevOrders]
	nextToken: String
}

type Query {
	getPriyankaDevOrders(orderId: String!): PriyankaDevOrders
	listPriyankaDevOrders(filter: TablePriyankaDevOrdersFilterInput, limit: Int, nextToken: String): PriyankaDevOrdersConnection
}

type Subscription {
	onCreatePriyankaDevOrders(
		orderId: String,
		createdTime: String,
		description: String,
		weight: String
	): PriyankaDevOrders
		@aws_subscribe(mutations: ["createPriyankaDevOrders"])
	onUpdatePriyankaDevOrders(
		orderId: String,
		createdTime: String,
		description: String,
		weight: String
	): PriyankaDevOrders
		@aws_subscribe(mutations: ["updatePriyankaDevOrders"])
	onDeletePriyankaDevOrders(
		orderId: String,
		createdTime: String,
		description: String,
		weight: String
	): PriyankaDevOrders
		@aws_subscribe(mutations: ["deletePriyankaDevOrders"])
}

input TableBooleanFilterInput {
	ne: Boolean
	eq: Boolean
}

input TableFloatFilterInput {
	ne: Float
	eq: Float
	le: Float
	lt: Float
	ge: Float
	gt: Float
	contains: Float
	notContains: Float
	between: [Float]
}

input TableIDFilterInput {
	ne: ID
	eq: ID
	le: ID
	lt: ID
	ge: ID
	gt: ID
	contains: ID
	notContains: ID
	between: [ID]
	beginsWith: ID
}

input TableIntFilterInput {
	ne: Int
	eq: Int
	le: Int
	lt: Int
	ge: Int
	gt: Int
	contains: Int
	notContains: Int
	between: [Int]
}

input TablePriyankaDevOrdersFilterInput {
	orderId: TableStringFilterInput
	createdTime: TableStringFilterInput
	description: TableStringFilterInput
	weight: TableStringFilterInput
}

input TableStringFilterInput {
	ne: String
	eq: String
	le: String
	lt: String
	ge: String
	gt: String
	contains: String
	notContains: String
	between: [String]
	beginsWith: String
}

input UpdatePriyankaDevOrdersInput {
	orderId: String!
	createdTime: String
	description: String
	weight: String
	orderStatus: String
}